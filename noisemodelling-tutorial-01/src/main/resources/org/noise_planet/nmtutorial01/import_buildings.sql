DROP TABLE IF EXISTS MAP_BUILDINGS;
CREATE TABLE MAP_BUILDINGS(ID_WAY BIGINT PRIMARY KEY) AS SELECT DISTINCT ID_WAY
FROM MAP_WAY_TAG WT, MAP_TAG T
WHERE WT.ID_TAG = T.ID_TAG AND T.TAG_KEY IN ('building');
DROP TABLE IF EXISTS MAP_BUILDINGS_GEOM;

CREATE TABLE MAP_BUILDINGS_GEOM AS SELECT ID_WAY,
ST_MAKEPOLYGON(ST_MAKELINE(THE_GEOM)) THE_GEOM FROM (SELECT (SELECT
ST_ACCUM(THE_GEOM) THE_GEOM FROM (SELECT N.ID_NODE, N.THE_GEOM,WN.ID_WAY IDWAY FROM
MAP_NODE N,MAP_WAY_NODE WN WHERE N.ID_NODE = WN.ID_NODE ORDER BY
WN.NODE_ORDER) WHERE  IDWAY = W.ID_WAY) THE_GEOM ,W.ID_WAY
FROM MAP_WAY W,MAP_BUILDINGS B
WHERE W.ID_WAY = B.ID_WAY) GEOM_TABLE WHERE ST_GEOMETRYN(THE_GEOM,1) =
ST_GEOMETRYN(THE_GEOM, ST_NUMGEOMETRIES(THE_GEOM)) AND ST_NUMGEOMETRIES(THE_GEOM) >
2;
DROP TABLE MAP_BUILDINGS;
alter table MAP_BUILDINGS_GEOM add column height double;
update MAP_BUILDINGS_GEOM set height = (select round("VALUE" * 3.0 + RAND() * 2,1) from MAP_WAY_TAG where id_tag = (SELECT ID_TAG FROM MAP_TAG T WHERE T.TAG_KEY = 'building:levels' LIMIT 1) and id_way = MAP_BUILDINGS_GEOM.id_way);
update MAP_BUILDINGS_GEOM set height = round(4 + RAND() * 2,1) where height is null;
drop table if exists BUILDINGS_RAW;
create table BUILDINGS_RAW(id_way serial, the_geom geometry, height double) as select id_way,  ST_SimplifyPreserveTopology(st_buffer(ST_TRANSFORM(ST_SETSRID(THE_GEOM, 4326), 2154), -0.1, 'join=mitre'),0.1) the_geom , height from MAP_BUILDINGS_GEOM;
drop table if exists MAP_BUILDINGS_GEOM;